package org.myEncuesta.persistence.hibernate;
// Generated Apr 3, 2017 10:52:47 AM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PollResponsesHeader generated by hbm2java
 */
@Entity
@Table(name = "PollResponsesHeader", schema = "dbo", catalog = "myEncuesta")
public class PollResponsesHeader implements java.io.Serializable {

	private Integer id;
	private Polls polls;
	private Date startDateTime;
	private Date finishDateTime;
	private Set<Responses> responseses = new HashSet<Responses>(0);

	public PollResponsesHeader() {
	}

	public PollResponsesHeader(Polls polls) {
		this.polls = polls;
	}

	public PollResponsesHeader(Polls polls, Date startDateTime, Date finishDateTime, Set<Responses> responseses) {
		this.polls = polls;
		this.startDateTime = startDateTime;
		this.finishDateTime = finishDateTime;
		this.responseses = responseses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Polls_id", nullable = false)
	public Polls getPolls() {
		return this.polls;
	}

	public void setPolls(Polls polls) {
		this.polls = polls;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "startDateTime", length = 23)
	public Date getStartDateTime() {
		return this.startDateTime;
	}

	public void setStartDateTime(Date startDateTime) {
		this.startDateTime = startDateTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "finishDateTime", length = 23)
	public Date getFinishDateTime() {
		return this.finishDateTime;
	}

	public void setFinishDateTime(Date finishDateTime) {
		this.finishDateTime = finishDateTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pollResponsesHeader")
	public Set<Responses> getResponseses() {
		return this.responseses;
	}

	public void setResponseses(Set<Responses> responseses) {
		this.responseses = responseses;
	}

}
