package org.myEncuesta.persistence.hibernate;
// Generated Apr 3, 2017 10:52:47 AM by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * FieldTypes generated by hbm2java
 */
@Entity
@Table(name = "FieldTypes", schema = "dbo", catalog = "myEncuesta")
public class FieldTypes implements java.io.Serializable {

	private Integer id;
	private String className;
	private boolean useList;
	private boolean openWrite;
	private boolean isDate;
	private Set<QuestionFields> questionFieldses = new HashSet<QuestionFields>(0);

	public FieldTypes() {
	}

	public FieldTypes(boolean useList, boolean openWrite, boolean isDate) {
		this.useList = useList;
		this.openWrite = openWrite;
		this.isDate = isDate;
	}

	public FieldTypes(String className, boolean useList, boolean openWrite, boolean isDate,
			Set<QuestionFields> questionFieldses) {
		this.className = className;
		this.useList = useList;
		this.openWrite = openWrite;
		this.isDate = isDate;
		this.questionFieldses = questionFieldses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "className")
	public String getClassName() {
		return this.className;
	}

	public void setClassName(String className) {
		this.className = className;
	}

	@Column(name = "useList", nullable = false)
	public boolean isUseList() {
		return this.useList;
	}

	public void setUseList(boolean useList) {
		this.useList = useList;
	}

	@Column(name = "openWrite", nullable = false)
	public boolean isOpenWrite() {
		return this.openWrite;
	}

	public void setOpenWrite(boolean openWrite) {
		this.openWrite = openWrite;
	}

	@Column(name = "isDate", nullable = false)
	public boolean isIsDate() {
		return this.isDate;
	}

	public void setIsDate(boolean isDate) {
		this.isDate = isDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fieldTypes")
	public Set<QuestionFields> getQuestionFieldses() {
		return this.questionFieldses;
	}

	public void setQuestionFieldses(Set<QuestionFields> questionFieldses) {
		this.questionFieldses = questionFieldses;
	}

}
