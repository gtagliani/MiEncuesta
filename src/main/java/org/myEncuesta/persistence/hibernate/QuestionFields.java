package org.myEncuesta.persistence.hibernate;
// Generated Apr 3, 2017 10:52:47 AM by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.myEncuesta.persistence.interfaces.IDataList;

/**
 * QuestionFields generated by hbm2java
 */
@Entity
@Table(name = "QuestionFields", schema = "dbo", catalog = "myEncuesta")
public class QuestionFields implements java.io.Serializable {

	private Integer id;
	private IDataList dataList;
	private FieldTypes fieldTypes;
	private Questions questions;
	private String expressionShow;
	private String expressionValidation;
	private Integer orderToShow;
	private boolean decimalValidation;
	private boolean numberValidation;
	private Set<Responses> responseses = new HashSet<Responses>(0);

	public QuestionFields() {
	}

	public QuestionFields(IDataList dataList, FieldTypes fieldTypes, Questions questions, boolean decimalValidation,
			boolean numberValidation) {
		this.dataList = dataList;
		this.fieldTypes = fieldTypes;
		this.questions = questions;
		this.decimalValidation = decimalValidation;
		this.numberValidation = numberValidation;
	}

	public QuestionFields(IDataList dataList, FieldTypes fieldTypes, Questions questions, String expressionShow,
			String expressionValidation, Integer orderToShow, boolean decimalValidation, boolean numberValidation,
			Set<Responses> responseses) {
		this.dataList = dataList;
		this.fieldTypes = fieldTypes;
		this.questions = questions;
		this.expressionShow = expressionShow;
		this.expressionValidation = expressionValidation;
		this.orderToShow = orderToShow;
		this.decimalValidation = decimalValidation;
		this.numberValidation = numberValidation;
		this.responseses = responseses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DataList_id", nullable = false)
	public IDataList getDataList() {
		return this.dataList;
	}

	public void setDataList(IDataList dataList) {
		this.dataList = dataList;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FieldTypes_id", nullable = false)
	public FieldTypes getFieldTypes() {
		return this.fieldTypes;
	}

	public void setFieldTypes(FieldTypes fieldTypes) {
		this.fieldTypes = fieldTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Questions_id", nullable = false)
	public Questions getQuestions() {
		return this.questions;
	}

	public void setQuestions(Questions questions) {
		this.questions = questions;
	}

	@Column(name = "expressionShow")
	public String getExpressionShow() {
		return this.expressionShow;
	}

	public void setExpressionShow(String expressionShow) {
		this.expressionShow = expressionShow;
	}

	@Column(name = "expressionValidation")
	public String getExpressionValidation() {
		return this.expressionValidation;
	}

	public void setExpressionValidation(String expressionValidation) {
		this.expressionValidation = expressionValidation;
	}

	@Column(name = "orderToShow")
	public Integer getOrderToShow() {
		return this.orderToShow;
	}

	public void setOrderToShow(Integer orderToShow) {
		this.orderToShow = orderToShow;
	}

	@Column(name = "decimalValidation", nullable = false)
	public boolean isDecimalValidation() {
		return this.decimalValidation;
	}

	public void setDecimalValidation(boolean decimalValidation) {
		this.decimalValidation = decimalValidation;
	}

	@Column(name = "numberValidation", nullable = false)
	public boolean isNumberValidation() {
		return this.numberValidation;
	}

	public void setNumberValidation(boolean numberValidation) {
		this.numberValidation = numberValidation;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionFields")
	public Set<Responses> getResponseses() {
		return this.responseses;
	}

	public void setResponseses(Set<Responses> responseses) {
		this.responseses = responseses;
	}

}
